@model IEnumerable<ClinicalResearchApp.Models.ResearchData>

<!-- Banner Section -->
<p>Welcome, @ViewBag.UserName (@ViewBag.jhed) Role: (@ViewBag.Admin)</p>

@if (User.Identity.IsAuthenticated)
{
    <!-- Add authenticated user actions here if needed -->
}
else
{
    <!-- Add guest actions here if needed -->
}

<head>
<style>
    /* Table Styling */
    .styled-table {
        width: 100%;
        border-collapse: collapse;
        margin: 25px 0;
        font-size: 14px;
        text-align: left;
    }
    
    .styled-table th, .styled-table td {
        padding: 10px 10px;
        border: 1px solid #ddd;
    }

    .styled-table th {
        background-color: #f4f4f4;
        color: #333;
        font-weight: bold;
    }

    .styled-table tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .styled-table tr:hover {
        background-color: #f1f1f1;
    }

    /* Button Styling */
    .styled-table .btn {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 5px 5px;
        cursor: pointer;
        border-radius: 5px;
    }

    .styled-table .btn:hover {
        background-color: #0056b3;
    }
    /* Symbol Styling */
    .sort-symbol {
        font-size: 12px;
        margin-left: 5px;
        color: gray;
    }
</style>
</head>

<!-- Filtering Form -->
<form method="get" asp-action="Index">
    <table class="table table-striped styled-table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IRBNumberSort"]">IRB Number
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("irb"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "irb_desc" ? "↓" : "↑")
                            </span>
                        }
                    </a>
                </th>
                  <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StudyNameSort"]">Study Name
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("study"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "study_desc" ? "↓" : "↑")
                            </span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["InvestigatorSort"]">Principal Investigator
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("investigator"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "investigator_desc" ? "↓" : "↑")
                            </span>
                       }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSort"]">Calculation Complete?
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("status"))
                        {
                             <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "status_desc" ? "↓" : "↑")
                            </span>
                         }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["UpdatedSort"]">RTC Last Updated
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("updated"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "updated_desc" ? "↓" : "↑")
                            </span>
                         }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["TierSort"]">Tier
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("tier"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "tier_desc" ? "↓" : "↑")
                            </span>                            
                        }
                    </a>
                </th>
                <th>Actions</th>
            </tr>
            
            <tr>
                <th>
                    <input type="text" name="irbFilter" value="@ViewData["IRBFilter"]" placeholder="Filter by IRB Number" />
                </th>
                 <th>
                    <input type="text" name="studyFilter" value="@ViewData["StudyFilter"]" placeholder="Filter by Study Name" />
                </th>
                <th>
                    <input type="text" name="investigatorFilter" value="@ViewData["InvestigatorFilter"]" placeholder="Filter by Investigator" />
                </th>
                <th>
                    <input type="text" name="statusFilter" value="@ViewData["StatusFilter"]" placeholder="Filter by Status" />
                </th>
                <th>
                    <input type="text" name="dateFilter" value="@ViewData["DateFilter"]" placeholder="Filter by Date" />
                </th>
                 <th>
                    <input type="text" name="tierFilter" value="@ViewData["TierFilter"]" placeholder="Filter by Tier" />
                </th>
                <th>
                    <button type="submit" name="filterAction" value="applyFilters" class="btn btn-primary">Apply Filters</button>
                </th>
            </tr>
    
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                 <tr>
                    <td>@item.Id</td>
                    <td>@item.StudyName</td>
                    <td>@item.PrincipalInvestigator</td>
                    <td>@item.Status</td>
                    <td>@item.StartDate</td>
                    <td>@item.Tier</td>
                        <!--
                        <td>
                            <button type="button" class="btn btn-primary" onclick="postEdit('@item.Id')">Edit</button>
                        </td>
                        -->
                        <td>
                            @if (ViewBag.Admin == "Admin")
                            {
                                <button type="button" class="btn btn-primary" onclick="postAction('@item.Id', true)">View</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-primary" onclick="postAction('@item.Id', false)">Edit</button>
                            }
                        </td>
  
                </tr>
            }
        </tbody>
    </table>
   <script>
    function postEdit(id) {
        const form = document.createElement('form');
        form.method = 'post';
        form.action = '/Research/Edit';

        const hiddenField = document.createElement('input');
        hiddenField.type = 'hidden';
        hiddenField.name = 'id';
        hiddenField.value = id;

        form.appendChild(hiddenField);
        document.body.appendChild(form);
        form.submit();
    }
    function postAction(id, viewOnly) {
        const form = document.createElement('form');
        form.method = 'post';
        form.action = '/Research/Edit'; // Use the appropriate controller action URL

        const idField = document.createElement('input');
        idField.type = 'hidden';
        idField.name = 'id';
        idField.value = id;

        const viewOnlyField = document.createElement('input');
        viewOnlyField.type = 'hidden';
        viewOnlyField.name = 'viewOnly';
        viewOnlyField.value = viewOnly;

        form.appendChild(idField);
        form.appendChild(viewOnlyField);
        document.body.appendChild(form);
        form.submit();
    }
</script>
</form>
