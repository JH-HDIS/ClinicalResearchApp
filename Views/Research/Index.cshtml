@model IEnumerable<ClinicalResearchApp.Models.ResearchData>

<!-- Banner Section -->
<p>Welcome, @ViewBag.UserName (@ViewBag.jhed) Role: (@ViewBag.Admin)</p>

@if (User.Identity.IsAuthenticated)
{
    <!-- Add authenticated user actions here if needed -->
}
else
{
    <!-- Add guest actions here if needed -->
}

<head>
<style>
    /* Table Styling */
    .styled-table {
        width: 100%;
        border-collapse: collapse;
        margin: 25px 0;
    using System.Diagnostics.Eventing.Reader;
        font-size: 14px;
        text-align: left;
    }
    
    .styled-table th, .styled-table td {
        padding: 10px 10px;
        border: 1px solid #ddd;
    }

    .styled-table th {
        background-color: #f4f4f4;
        color: #333;
        font-weight: bold;
    }

    .styled-table tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .styled-table tr:hover {
        background-color: #f1f1f1;
    }

    /* Button Styling */
    .styled-table .btn {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 5px 5px;
        cursor: pointer;
        border-radius: 5px;
    }

    .styled-table .btn:hover {
        background-color: #0056b3;
    }
    /* Symbol Styling */
    .sort-symbol {
        font-size: 12px;
        margin-left: 5px;
        color: gray;
    }
    .btn-info {
        position: relative;
        color: #fff;
        padding: 6px 6px;
        background-color: #0d6efd; /* Bootstrap Info Blue */
        border-color: #0d6efd;
        border: none;
        border-radius: 5px;
    }

    .btn-info a {
        color: white; /* Make text white */
        text-decoration: none; /* Remove underline */
        display: block; /* Make link fill the button */
        width: 100%;
        height: 100%;
    }

    .btn-info a:hover {
        background-color: #0056b3;
        text-decoration: underline; /* Underline on hover */
    }
</style>
</head>
<!-- IRB Search Section -->
@if (ViewBag.Admin == "Non-Admin")
{
    <form method="post" asp-action="SearchByIRB">
        <label for="irbSearch">Enter IRB Number:</label>
        <input type="text" id="irbSearch" name="irbSearch" placeholder="Enter IRB Number" required />
        <button type="submit" class="btn btn-primary">Search</button>

    <!-- Hyperlink for Tips and Info -->
    <button type="button" class="btn btn-info" id="tipsInfoButton">
    Tips and Info
</button>

</form>

    @if (ViewBag.SearchPerformed != null && (bool)ViewBag.SearchPerformed)
    {
         if ((bool)ViewBag.IrbFound && (bool)ViewBag.UserOnStudy)
        {
           
            <script>
                document.addEventListener('DOMContentLoaded', function() {
                    postAction('@ViewBag.IrbNumber', false);
                });

                function postAction(id, viewOnly) {
                    const form = document.createElement('form');
                    form.method = 'post';
                    form.action = '/Research/Edit'; // Use the appropriate controller action URL

                    const idField = document.createElement('input');
                    idField.type = 'hidden';
                    idField.name = 'id';
                    idField.value = id;

                    const viewOnlyField = document.createElement('input');
                    viewOnlyField.type = 'hidden';
                    viewOnlyField.name = 'viewOnly';
                    viewOnlyField.value = viewOnly;

                    form.appendChild(idField);
                    form.appendChild(viewOnlyField);
                    document.body.appendChild(form);
                    form.submit();
                }
            </script>
        } else
        { 
           if ((bool)ViewBag.IrbFound && !(bool)ViewBag.UserOnStudy) {
            <p>You are not listed as the PI or study contact for this IRB application. Please contact datatrust@jhmi.edu for assistance.</p>
           }
           else { 
            <p>IRB Number not found. Do you want to create a new Risk Tiers calculator?</p>
            <form method="post" asp-action="Edit">
                <input type="hidden" name="id" value="@ViewBag.IrbNumber" />
                <input type="hidden" name="createNewFlag" value="Y" />
                <input type="hidden" name="userJHED" value="@ViewBag.jhed" />
                <button type="submit" name="createNew" value="yes" class="btn btn-primary">Yes</button>
                <button type="button" onclick="window.location.reload();" class="btn btn-secondary">No</button>
            </form>
            }
        }
    }
}

@if (ViewBag.Admin == "Admin")
{
<!-- Filtering Form -->
<form method="get" asp-action="Index">
    <table class="table table-striped styled-table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IRBNumberSort"]">IRB Number
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("irb"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "irb_desc" ? "↓" : "↑")
                            </span>
                        }
                    </a>
                </th>
                  <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StudyNameSort"]">Study Name
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("study"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "study_desc" ? "↓" : "↑")
                            </span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["InvestigatorSort"]">Principal Investigator
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("investigator"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "investigator_desc" ? "↓" : "↑")
                            </span>
                       }
                    </a>
                </th>
                <!--
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSort"]">Calculation Complete?
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("status"))
                        {
                             <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "status_desc" ? "↓" : "↑")
                            </span>
                         }
                    </a>
                </th>
                -->
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["UpdatedSort"]">RTC Last Updated
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("updated"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "updated_desc" ? "↓" : "↑")
                            </span>
                         }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["TierSort"]">Tier
                        @if (((string)(ViewData["CurrentSort"] ?? string.Empty)).StartsWith("tier"))
                        {
                            <span class="sort-symbol">
                                @((string)ViewData["CurrentSort"] == "tier_desc" ? "↓" : "↑")
                            </span>                            
                        }
                    </a>
                </th>
                <th>Actions</th>
            </tr>
            
            <tr>
                <th>
                    <input type="text" name="irbFilter" value="@ViewData["IRBFilter"]" placeholder="Filter by IRB Number" />
                </th>
                 <th>
                    <input type="text" name="studyFilter" value="@ViewData["StudyFilter"]" placeholder="Filter by Study Name" />
                </th>
                <th>
                    <input type="text" name="investigatorFilter" value="@ViewData["InvestigatorFilter"]" placeholder="Filter by Investigator" />
                </th>
                <!--
                <th>
                    <input type="text" name="statusFilter" value="@ViewData["StatusFilter"]" placeholder="Filter by Status" />
                </th>
                -->
                <th>
                    <input type="text" name="dateFilter" value="@ViewData["DateFilter"]" placeholder="Filter by Date" />
                </th>
                 <th>
                    <input type="text" name="tierFilter" value="@ViewData["TierFilter"]" placeholder="Filter by Tier" />
                </th>
                <th>
                    <button type="submit" name="filterAction" value="applyFilters" class="btn btn-primary">Apply Filters</button>
                </th>
            </tr>
    
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                 <tr>
                    <td>@item.Id</td>
                    <td>@item.StudyName</td>
                    <td>@item.PrincipalInvestigator</td>
                    <!--
                    <td>@item.Status</td>
                    -->
                    <td>@item.StartDate</td>
                    <td>@item.Tier</td>
                        <!--
                        <td>
                            <button type="button" class="btn btn-primary" onclick="postEdit('@item.Id')">Edit</button>
                        </td>
                        -->
                        <td>
                            @if (ViewBag.Admin == "Admin")
                            {
                                <button type="button" class="btn btn-primary" onclick="postAction('@item.Id', true)">View</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-primary" onclick="postAction('@item.Id', false)">Edit</button>
                            }
                        </td>
  
                </tr>
            }
        </tbody>
    </table>

   <script>
    function postEdit(id) {
        const form = document.createElement('form');
        form.method = 'post';
        form.action = '/Research/Edit';

        const hiddenField = document.createElement('input');
        hiddenField.type = 'hidden';
        hiddenField.name = 'id';
        hiddenField.value = id;

        form.appendChild(hiddenField);
        document.body.appendChild(form);
        form.submit();
    }
    function postAction(id, viewOnly) {
        const form = document.createElement('form');
        form.method = 'post';
        form.action = '/Research/Edit'; // Use the appropriate controller action URL

        const idField = document.createElement('input');
        idField.type = 'hidden';
        idField.name = 'id';
        idField.value = id;

        const viewOnlyField = document.createElement('input');
        viewOnlyField.type = 'hidden';
        viewOnlyField.name = 'viewOnly';
        viewOnlyField.value = viewOnly;

        form.appendChild(idField);
        form.appendChild(viewOnlyField);
        document.body.appendChild(form);
        form.submit();
    }
</script>



</form>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {

    if (document.getElementById("tipsInfoButton")) {
        const button = document.getElementById("tipsInfoButton");

        // Ensure the button opens the link in a new tab
        button.addEventListener("click", function () {
            window.open("https://www.hopkinsmedicine.org/institutional-review-board/guidelines-policies/guidelines/levels-of-identification-of-data", 
                        "_blank");
        });

    }
    document.addEventListener("keydown", function (event) {
    console.log(`Key pressed: ${event.code}, Ctrl: ${event.ctrlKey}, Shift: ${event.shiftKey}`);
    if (event.altKey && event.code === "KeyT") { // Example: Alt + T
        event.preventDefault(); // Prevent any default action
        event.stopPropagation()
        executeStoredProcedure();
    }
});

function executeStoredProcedure() {
    fetch('/api/execute-stored-procedure', { // Adjust URL as needed
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ jhedId: "@ViewBag.jhed" }) // Pass the JHED ID if needed
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message); // Show success/failure message
        if (data.message.includes("success")) { 
            window.location.reload(true); // Reload the page
        }
    })
    .catch(error => console.error("Error:", error));
}
    });
</script>